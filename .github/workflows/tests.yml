name: Tests

on:
  push:
    branches:
      - development
      - staging
      - beta
      - release
      - master
      - 'feature-*'
  pull_request:
    branches:
      - development
      - staging
      - beta
      - release
      - master
      - 'feature-*'

jobs:
  dependency-audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running dependency audit
        run: pnpm audit
  outdated:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running outdated
        run: pnpm outdated
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running lint
        run: pnpm lint
  lint-tsc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running lint-tsc
        run: pnpm lint-tsc
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running unit tests
        run: pnpm test:coverage
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the project
        run: pnpm build
  storybook-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the storybook
        run: pnpm storybook:build
  bundle-watch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [10.0.0-alpha.2]
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Authenticating with GitHub Packages
        run: |
          sed -i 's|//npm.pkg.github.com/:_authToken=${GH_TOKEN}|#//npm.pkg.github.com/:_authToken=${GH_TOKEN}|' .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the project
        run: pnpm build
      - name: Checking bundle size
        run: npx bundlewatch --config bundlewatch.config.json
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_OWNER: ${{ github.repository_owner }}
          CI_REPO_NAME: ${{ github.event.repository.name }}
          CI_COMMIT_SHA: ${{ github.sha }}
