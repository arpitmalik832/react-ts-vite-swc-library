// Note: Include only frequently utilized mixins within this file,
// as all of its contents are being exported.

// Ellipsis for single line text overflow
@mixin ellipsis($maxWidth: false) {
  @if $maxWidth {
    max-width: $maxWidth;
  }

  & {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

// Multiline ellipsis for webkit browsers
// this will provide support only for -webkit- browser for till date
@mixin ellipsisMulti($maxLine, $maxHeight: false) {
  @if $maxHeight {
    max-height: $maxHeight;
  }

  overflow: hidden; // fallback for non supported browsers
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $maxLine;

  white-space: normal;
}

// Add horizontal gap between elements
@mixin rowGap($gap) {
  @if $gap {
    & > * + * {
      margin-left: $gap;
    }
  }
}

// Add vertical gap between elements
@mixin colGap($gap) {
  @if $gap {
    & > * + * {
      margin-top: $gap;
    }
  }
}

// Responsive breakpoints
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (width <= 600px) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media (width <= 750px) {
      @content;
    }
  }
  @if $breakpoint == tab {
    @media (width <= 1070px) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (width <= 961px) {
      @content;
    }
  }
}

// Scrollable container with cross-browser support
@mixin scrollable {
  @include respond(phone);

  scrollbar-width: none;

  overflow: -moz-scrollbars-none;
  overflow-x: scroll;

  max-width: 95vw;

  white-space: nowrap;

  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    display: none;
    width: 0 !important;
    height: 0 !important;
  }
}

// Flexbox layout
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

// Grid layout
@mixin grid($columns: 1fr, $rows: auto, $gap: 0) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Transition
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Box shadow
@mixin boxShadow($x: 0, $y: 2px, $blur: 4px, $color: #000) {
  box-shadow: $x $y $blur $color;
}

// for position property
@mixin position(
  $position,
  $top: false,
  $right: false,
  $bottom: false,
  $left: false,
  $zIndex: false
) {
  & {
    @if $top {
      top: $top;
    }

    @if $right {
      right: $right;
    }

    @if $bottom {
      bottom: $bottom;
    }

    @if $left {
      left: $left;
    }

    @if $zIndex {
      z-index: $zIndex;
    }

    position: $position;
  }
}
